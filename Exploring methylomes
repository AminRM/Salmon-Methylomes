I used CGmaptools, to explore the methylome results before running differential methylation analyses
this will give information for:

(base) moh034@pearcey-login:/flush2/moh034/OV-T4F4> cat OV-T4F4-mstat.sh
#!/bin/bash
#SBATCH --job-name=OV-T4F4-Mstat
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --mail-type=ALL
#SBATCH --mem=4gb
#SBATCH --time=72:00:00
#SBATCH --mail-user=amin.esmai@csiro.au
$SLURM_SUBMIT_DIR

module load python/2.7.13
zcat OV-T4F4.CGmap.gz | /flush2/moh034/cgmaptools-0.1.1/cgmaptools mstat -c 10 -f pdf -p OV-T4F4.mstat -t OV-T4F4.mstat > OV-T4F4.mstat_CG.log



extract data for CG position from the BS-Seeker2 CGmap file for DSS package

#!/bin/bash
#SBATCH --job-name=CG-pos
#SBATCH --nodes=1
#SBATCH --ntasks-per-node=1
#SBATCH --mail-type=ALL
#SBATCH --mem=4gb
#SBATCH --time=24:00:00
#SBATCH --mail-user=amin.esmai@csiro.au
$SLURM_SUBMIT_DIR

zcat Pit-T1F4.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > Pit-T1F4.CG_positions.tsv
zcat Pit-T4F2.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > Pit-T4F2.CG_positions.tsv
zcat Pit-T4F4.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > Pit-T4F4.CG_positions.tsv
zcat LV-T1F3.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > LV-T1F3.CG_positions.tsv
zcat LV-T1F4.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > LV-T1F4.CG_positions.tsv
zcat LV-T4F3.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > LV-T4F3.CG_positions.tsv
zcat LV-T4F4.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > LV-T4F4.CG_positions.tsv
zcat OV-T1F1.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > OV-T1F1.CG_positions.tsv
zcat OV-T1F3.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > OV-T1F3.CG_positions.tsv
zcat OV-T4F3.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > OV-T4F3.CG_positions.tsv
zcat OV-T4F4.CGmap.gz | awk 'BEGIN {FS=OFS="\t"} {if ($4 == "CG") print $1, $3, $8, $7}' > OV-T4F4.CG_positions.tsv

head Pit-T1F4.CG_positions.tsv
$1 chromosome ID
$2 position
$3 coverage
$4 methylated_count
AGKD04009448.1  1567    17      15
AGKD04009448.1  3427    2       1
AGKD04009448.1  3428    1       0
AGKD04009448.1  3484    1       0
AGKD04009448.1  3485    2       1
AGKD04009448.1  3488    1       0
AGKD04009448.1  3489    2       1
AGKD04009448.1  3691    3       2
AGKD04009448.1  3692    2       1
AGKD04009448.1  3698    3       3


Now we need to filter some of these positions based on coverage 

awk '{ if($3 >= 10) { print }}' Pit-T1F4.CG_positions.txt > Pit-T1F4.CG_positions.min10x.tsv
head Pit-T1F4.CG_positions.min10x.tsv

AGKD04009448.1  4143    22      20
AGKD04009448.1  4231    41      37
AGKD04009448.1  4233    41      34
AGKD04009448.1  4361    38      32
AGKD04009448.1  4598    19      4
AGKD04009448.1  4680    15      10
AGKD04009448.1  4692    13      5
AGKD04009448.1  4715    12      2
AGKD04009448.1  6564    12      12
AGKD04009448.1  6603    14      13


We need to see how the replicates behave: 


require(data.table)
OvaryT1.1 <- fread('OV-T1F1.CG_positions.min10x.tsv')
setnames(OvaryT1.1, c("chr", "pos", "N", "X"))
tail(OvaryT1.1)
dim(OvaryT1.1)
OvaryT1.2 <- fread('OV-T1F3.CG_positions.min10x.tsv')
setnames(OvaryT1.2, c("chr", "pos", "N", "X"))
OvaryT4.1 <- fread('OV-T4F3.CG_positions.min10x.tsv')
setnames(OvaryT4.1, c("chr", "pos", "N", "X"))
OvaryT4.2 <- fread('OV-T4F4.CG_positions.min10x.tsv')
setnames(OvaryT4.2, c("chr", "pos", "N", "X"))
LiverT1.1 <- fread('LV-T1F3.CG_positions.min10x.tsv')
setnames(LiverT1.1, c("chr", "pos", "N", "X"))
LiverT1.2 <- fread('LV-T1F4.CG_positions.min10x.tsv')
setnames(LiverT1.2, c("chr", "pos", "N", "X"))
LiverT4.1 <- fread('LV-T4F3.CG_positions.min10x.tsv')
setnames(LiverT4.1, c("chr", "pos", "N", "X"))
LiverT4.2 <- fread('LV-T4F4.CG_positions.min10x.tsv')
setnames(LiverT4.2, c("chr", "pos", "N", "X"))
PitT1.1 <- fread('Pit-T1F3.CG_positions.min10x.tsv')
setnames(PitT1.1, c("chr", "pos", "N", "X"))
PitT1.2 <- fread('Pit-T1F4.CG_positions.min10x.tsv')
setnames(PitT1.2, c("chr", "pos", "N", "X"))
PitT4.1 <- fread('Pit-T4F2.CG_positions.min10x.tsv')
setnames(PitT4.1, c("chr", "pos", "N", "X"))
PitT4.2 <- fread('Pit-T4F4.CG_positions.min10x.tsv')
setnames(PitT4.2, c("chr", "pos", "N", "X"))
head(PitT4.2)
max()
N_meth = cbind(OvaryT1.1$X, OvaryT1.2$X, OvaryT4.1$X, OvaryT4.2$X,LiverT1.1$X, LiverT1.2$X, LiverT4.1$X, LiverT4.2$X,PitT1.1$X, PitT1.2$X, PitT4.1$X, PitT4.2$X)
dim(N_meth)
head(N_meth)
View(N_meth)
N_covered = cbind(OvaryT1.1$N, OvaryT1.2$N, OvaryT4.1$N, OvaryT4.2$N,LiverT1.1$N, LiverT1.2$N, LiverT4.1$N, LiverT4.2$N,PitT1.1$N, PitT1.2$N, PitT4.1$N, PitT4.2$N)
dim(N_covered)
head(N_covered)
avg_coverage = apply(N_covered, 1, mean)
avg_meth = apply(N_meth/N_covered, 1, mean)
avg_meth[1:10]
hist(avg_meth)
max(avg_meth)
min(avg_meth)



library(DSS)
require(bsseq)
BSobj <- makeBSseqData(list(OvaryT1.1,OvaryT1.2,OvaryT4.1,OvaryT4.2,LiverT1.1,LiverT1.2,LiverT4.1,LiverT4.2,PitT1.1,PitT1.2,PitT4.1,PitT4.2),c("OC1","OC2","OM1","OM2","LC1","LC2","LM1","LM2","PC1","PC2","PM1","PM2"))
BSobj
granges(BSobj)
meth_levels <- (getMeth(BSobj, type="raw"))
dim(meth_levels)
head(meth_levels)
meth_levels_noNAN <- meth_levels[complete.cases(meth_levels), ]
head(meth_levels_noNAN)
dim(meth_levels_noNAN)
install.packages("corrplot")
library(corrplot)


M <- cor(meth_levels_noNAN)
corrplot(M, method = "number")
corrplot(M, order = "hclust", addrect = 3)
corrplot.mixed(M)

write.table(meth_levels_noNAN, "M-levels.txt", sep="\t")
getwd()
library(reshape2)
melted_cormat <- melt(meth_levels_noNAN)
head(melted_cormat)

cor(meth_levels_noNAN)
pairs(meth_levels_noNAN)
library(ggplot2)
ggplot(data = melted_cormat, aes(x=Var1, y=Var2, fill=value)) + 
  geom_tile()

